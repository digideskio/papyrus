[buildout]
#checkout = collective.usermanual
checkout = documentation
extends =
# robot-support requires Plone-versions:
    http://dist.plone.org/release/4.3-latest/versions.cfg
parts =
    sphinx-build
    sphinx-intl
    transifex-client
#    makefile
# robot-support requires some scripts:
    robot
    pybot
    pybabel
    i18ndude

extensions = mr.developer
sources = sources
sources-dir = ${buildout:directory}/source
allow-picked-versions = true
auto-checkout = ${:checkout}

[sources]
#collective.usermanual = git git@github.com:collective/collective.usermanual.git branch=sources-only egg=false
#collective.developermanual = git git@github.com:collective/collective.developermanual.git branch=sources-only egg=false
plone.app.robotframework = git git://github.com/plone/plone.app.robotframework
robotframework-selenium2screenshots = git git://github.com/datakurre/robotframework-selenium2screenshots
sphinxcontrib-robotframework = git git://github.com/datakurre/sphinxcontrib_robotframework
documentation = git git@github.com:plone/documentation.git egg=false

[versions]
zc.buildout = 2.2.1
setuptools = 2.2
Sphinx = 1.2.1
# robot-support requires the newest versions:
Pygments = 1.6
docutils = 0.11
plone.app.robotframework = 0.7.3
robotframework = 2.8.4
robotframework-selenium2library = 1.5.0
robotframework-selenium2screenshots = 0.4.0
robotsuite = 1.4.3
selenium = 2.39.0
sphinxcontrib-robotframework = 0.4.2

[sphinx-build]
recipe = zc.recipe.egg
eggs =
    Sphinx
    sphinxcontrib-robotframework [docs]
    Plone
    plone.app.robotframework [speak]
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates standalone setup, which bootstraps Plone within Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'source')
    shutil.copy(join(path, 'documentation/robot-standalone.rst'), join(path, 'robot.rst'))
scripts =
    sphinx-build=sphinx-build

[robot]
recipe = zc.recipe.egg
eggs =
    Sphinx
    sphinxcontrib-robotframework [docs]
    Plone
    plone.app.robotframework [speak]
    plone.app.robotframework
initialization =
    # This enables po -> mo -compilation
    import os
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    # This activates robot-server, which uses robot-server Plone with Sphinx:
    import shutil
    from os.path import join
    path = join('${buildout:directory}', 'source')
    shutil.copy(join(path, 'documentation/robot-server.rst'), join(path, 'robot.rst'))
scripts =
    robot-server
    pybot=robot
    sphinx-build=robot-sphinx

[pybot]
recipe = zc.recipe.egg
eggs =
    sphinxcontrib-robotframework [docs]
    Plone
    plone.app.robotframework [speak]
    plone.app.robotframework
scripts =
    pybot
    pybabel

[sphinx-intl]
recipe = zc.recipe.egg
eggs = sphinx-intl [transifex]

[transifex-client]
recipe = zc.recipe.egg
eggs = transifex-client

[pybabel]
recipe = zc.recipe.egg
eggs = plone.app.robotframework
scripts = pybabel

[makefile]
recipe = collective.recipe.template
input = templates/Makefile.in
output = ${buildout:directory}/Makefile

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude
